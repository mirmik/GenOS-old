
kernel:     формат файла elf32-i386


Дизассемблирование раздела .text:

00100000 <_start-0xc>:
  100000:	02 b0 ad 1b 01 00    	add    0x11bad(%eax),%dh
  100006:	00 00                	add    %al,(%eax)
  100008:	fd                   	std    
  100009:	4f                   	dec    %edi
  10000a:	52                   	push   %edx
  10000b:	e4 31                	in     $0x31,%al

0010000c <_start>:
  10000c:	31 ed                	xor    %ebp,%ebp
  10000e:	5e                   	pop    %esi
  10000f:	89 e1                	mov    %esp,%ecx
  100011:	83 e4 f0             	and    $0xfffffff0,%esp
  100014:	50                   	push   %eax
  100015:	54                   	push   %esp
  100016:	52                   	push   %edx
  100017:	68 e0 02 10 00       	push   $0x1002e0
  10001c:	68 70 02 10 00       	push   $0x100270
  100021:	51                   	push   %ecx
  100022:	56                   	push   %esi
  100023:	68 e2 01 10 00       	push   $0x1001e2
  100028:	e8 23 03 00 00       	call   100350 <__fini_array_end+0x24>
  10002d:	f4                   	hlt    
  10002e:	66 90                	xchg   %ax,%ax

00100030 <__x86.get_pc_thunk.bx>:
  100030:	8b 1c 24             	mov    (%esp),%ebx
  100033:	c3                   	ret    
  100034:	66 90                	xchg   %ax,%ax
  100036:	66 90                	xchg   %ax,%ax
  100038:	66 90                	xchg   %ax,%ax
  10003a:	66 90                	xchg   %ax,%ax
  10003c:	66 90                	xchg   %ax,%ax
  10003e:	66 90                	xchg   %ax,%ax

00100040 <deregister_tm_clones>:
  100040:	b8 f3 10 10 00       	mov    $0x1010f3,%eax
  100045:	2d f0 10 10 00       	sub    $0x1010f0,%eax
  10004a:	83 f8 06             	cmp    $0x6,%eax
  10004d:	77 01                	ja     100050 <deregister_tm_clones+0x10>
  10004f:	c3                   	ret    
  100050:	b8 00 00 00 00       	mov    $0x0,%eax
  100055:	85 c0                	test   %eax,%eax
  100057:	74 f6                	je     10004f <deregister_tm_clones+0xf>
  100059:	55                   	push   %ebp
  10005a:	89 e5                	mov    %esp,%ebp
  10005c:	83 ec 18             	sub    $0x18,%esp
  10005f:	c7 04 24 f0 10 10 00 	movl   $0x1010f0,(%esp)
  100066:	ff d0                	call   *%eax
  100068:	c9                   	leave  
  100069:	c3                   	ret    
  10006a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00100070 <register_tm_clones>:
  100070:	b8 f0 10 10 00       	mov    $0x1010f0,%eax
  100075:	2d f0 10 10 00       	sub    $0x1010f0,%eax
  10007a:	c1 f8 02             	sar    $0x2,%eax
  10007d:	89 c2                	mov    %eax,%edx
  10007f:	c1 ea 1f             	shr    $0x1f,%edx
  100082:	01 d0                	add    %edx,%eax
  100084:	d1 f8                	sar    %eax
  100086:	75 01                	jne    100089 <register_tm_clones+0x19>
  100088:	c3                   	ret    
  100089:	ba 00 00 00 00       	mov    $0x0,%edx
  10008e:	85 d2                	test   %edx,%edx
  100090:	74 f6                	je     100088 <register_tm_clones+0x18>
  100092:	55                   	push   %ebp
  100093:	89 e5                	mov    %esp,%ebp
  100095:	83 ec 18             	sub    $0x18,%esp
  100098:	89 44 24 04          	mov    %eax,0x4(%esp)
  10009c:	c7 04 24 f0 10 10 00 	movl   $0x1010f0,(%esp)
  1000a3:	ff d2                	call   *%edx
  1000a5:	c9                   	leave  
  1000a6:	c3                   	ret    
  1000a7:	89 f6                	mov    %esi,%esi
  1000a9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

001000b0 <__do_global_dtors_aux>:
  1000b0:	80 3d f0 10 10 00 00 	cmpb   $0x0,0x1010f0
  1000b7:	75 13                	jne    1000cc <__do_global_dtors_aux+0x1c>
  1000b9:	55                   	push   %ebp
  1000ba:	89 e5                	mov    %esp,%ebp
  1000bc:	83 ec 08             	sub    $0x8,%esp
  1000bf:	e8 7c ff ff ff       	call   100040 <deregister_tm_clones>
  1000c4:	c6 05 f0 10 10 00 01 	movb   $0x1,0x1010f0
  1000cb:	c9                   	leave  
  1000cc:	f3 c3                	repz ret 
  1000ce:	66 90                	xchg   %ax,%ax

001000d0 <frame_dummy>:
  1000d0:	a1 ec 10 10 00       	mov    0x1010ec,%eax
  1000d5:	85 c0                	test   %eax,%eax
  1000d7:	74 1f                	je     1000f8 <frame_dummy+0x28>
  1000d9:	b8 00 00 00 00       	mov    $0x0,%eax
  1000de:	85 c0                	test   %eax,%eax
  1000e0:	74 16                	je     1000f8 <frame_dummy+0x28>
  1000e2:	55                   	push   %ebp
  1000e3:	89 e5                	mov    %esp,%ebp
  1000e5:	83 ec 18             	sub    $0x18,%esp
  1000e8:	c7 04 24 ec 10 10 00 	movl   $0x1010ec,(%esp)
  1000ef:	ff d0                	call   *%eax
  1000f1:	c9                   	leave  
  1000f2:	e9 79 ff ff ff       	jmp    100070 <register_tm_clones>
  1000f7:	90                   	nop
  1000f8:	e9 73 ff ff ff       	jmp    100070 <register_tm_clones>

001000fd <_Z7putcharc>:
  1000fd:	55                   	push   %ebp
  1000fe:	89 e5                	mov    %esp,%ebp
  100100:	83 ec 04             	sub    $0x4,%esp
  100103:	8b 45 08             	mov    0x8(%ebp),%eax
  100106:	88 45 fc             	mov    %al,-0x4(%ebp)
  100109:	a1 08 10 10 00       	mov    0x101008,%eax
  10010e:	8b 15 f4 10 10 00    	mov    0x1010f4,%edx
  100114:	01 d2                	add    %edx,%edx
  100116:	83 c2 01             	add    $0x1,%edx
  100119:	01 d0                	add    %edx,%eax
  10011b:	c6 00 0a             	movb   $0xa,(%eax)
  10011e:	8b 15 08 10 10 00    	mov    0x101008,%edx
  100124:	a1 f4 10 10 00       	mov    0x1010f4,%eax
  100129:	01 c0                	add    %eax,%eax
  10012b:	01 c2                	add    %eax,%edx
  10012d:	0f b6 45 fc          	movzbl -0x4(%ebp),%eax
  100131:	88 02                	mov    %al,(%edx)
  100133:	a1 f4 10 10 00       	mov    0x1010f4,%eax
  100138:	83 c0 01             	add    $0x1,%eax
  10013b:	a3 f4 10 10 00       	mov    %eax,0x1010f4
  100140:	c9                   	leave  
  100141:	c3                   	ret    

00100142 <_Z4outbth>:
  100142:	55                   	push   %ebp
  100143:	89 e5                	mov    %esp,%ebp
  100145:	83 ec 08             	sub    $0x8,%esp
  100148:	8b 55 08             	mov    0x8(%ebp),%edx
  10014b:	8b 45 0c             	mov    0xc(%ebp),%eax
  10014e:	66 89 55 fc          	mov    %dx,-0x4(%ebp)
  100152:	88 45 f8             	mov    %al,-0x8(%ebp)
  100155:	0f b7 55 fc          	movzwl -0x4(%ebp),%edx
  100159:	0f b6 45 f8          	movzbl -0x8(%ebp),%eax
  10015d:	ee                   	out    %al,(%dx)
  10015e:	c9                   	leave  
  10015f:	c3                   	ret    

00100160 <_Z11move_cursorhh>:
  100160:	55                   	push   %ebp
  100161:	89 e5                	mov    %esp,%ebp
  100163:	83 ec 20             	sub    $0x20,%esp
  100166:	8b 55 08             	mov    0x8(%ebp),%edx
  100169:	8b 45 0c             	mov    0xc(%ebp),%eax
  10016c:	88 55 ec             	mov    %dl,-0x14(%ebp)
  10016f:	88 45 e8             	mov    %al,-0x18(%ebp)
  100172:	0f b6 4d ec          	movzbl -0x14(%ebp),%ecx
  100176:	0f b6 55 e8          	movzbl -0x18(%ebp),%edx
  10017a:	89 d0                	mov    %edx,%eax
  10017c:	c1 e0 02             	shl    $0x2,%eax
  10017f:	01 d0                	add    %edx,%eax
  100181:	c1 e0 02             	shl    $0x2,%eax
  100184:	01 c8                	add    %ecx,%eax
  100186:	89 45 fc             	mov    %eax,-0x4(%ebp)
  100189:	c7 44 24 04 0e 00 00 	movl   $0xe,0x4(%esp)
  100190:	00 
  100191:	c7 04 24 d4 03 00 00 	movl   $0x3d4,(%esp)
  100198:	e8 a5 ff ff ff       	call   100142 <_Z4outbth>
  10019d:	8b 45 fc             	mov    -0x4(%ebp),%eax
  1001a0:	c1 f8 08             	sar    $0x8,%eax
  1001a3:	0f b6 c0             	movzbl %al,%eax
  1001a6:	89 44 24 04          	mov    %eax,0x4(%esp)
  1001aa:	c7 04 24 d5 03 00 00 	movl   $0x3d5,(%esp)
  1001b1:	e8 8c ff ff ff       	call   100142 <_Z4outbth>
  1001b6:	c7 44 24 04 0f 00 00 	movl   $0xf,0x4(%esp)
  1001bd:	00 
  1001be:	c7 04 24 d4 03 00 00 	movl   $0x3d4,(%esp)
  1001c5:	e8 78 ff ff ff       	call   100142 <_Z4outbth>
  1001ca:	8b 45 fc             	mov    -0x4(%ebp),%eax
  1001cd:	0f b6 c0             	movzbl %al,%eax
  1001d0:	89 44 24 04          	mov    %eax,0x4(%esp)
  1001d4:	c7 04 24 d5 03 00 00 	movl   $0x3d5,(%esp)
  1001db:	e8 62 ff ff ff       	call   100142 <_Z4outbth>
  1001e0:	c9                   	leave  
  1001e1:	c3                   	ret    

001001e2 <main>:
  1001e2:	55                   	push   %ebp
  1001e3:	89 e5                	mov    %esp,%ebp
  1001e5:	83 ec 08             	sub    $0x8,%esp
  1001e8:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
  1001ef:	00 
  1001f0:	c7 04 24 0c 00 00 00 	movl   $0xc,(%esp)
  1001f7:	e8 64 ff ff ff       	call   100160 <_Z11move_cursorhh>
  1001fc:	c7 04 24 4d 00 00 00 	movl   $0x4d,(%esp)
  100203:	e8 f5 fe ff ff       	call   1000fd <_Z7putcharc>
  100208:	c7 04 24 69 00 00 00 	movl   $0x69,(%esp)
  10020f:	e8 e9 fe ff ff       	call   1000fd <_Z7putcharc>
  100214:	c7 04 24 72 00 00 00 	movl   $0x72,(%esp)
  10021b:	e8 dd fe ff ff       	call   1000fd <_Z7putcharc>
  100220:	c7 04 24 6d 00 00 00 	movl   $0x6d,(%esp)
  100227:	e8 d1 fe ff ff       	call   1000fd <_Z7putcharc>
  10022c:	c7 04 24 69 00 00 00 	movl   $0x69,(%esp)
  100233:	e8 c5 fe ff ff       	call   1000fd <_Z7putcharc>
  100238:	c7 04 24 6b 00 00 00 	movl   $0x6b,(%esp)
  10023f:	e8 b9 fe ff ff       	call   1000fd <_Z7putcharc>
  100244:	c7 04 24 0a 00 00 00 	movl   $0xa,(%esp)
  10024b:	e8 ad fe ff ff       	call   1000fd <_Z7putcharc>
  100250:	b8 00 00 00 00       	mov    $0x0,%eax
  100255:	c9                   	leave  
  100256:	c3                   	ret    

00100257 <init>:
  100257:	fa                   	cli    
  100258:	53                   	push   %ebx
  100259:	e8 84 ff ff ff       	call   1001e2 <main>
  10025e:	f4                   	hlt    

0010025f <loop>:
  10025f:	eb fe                	jmp    10025f <loop>
  100261:	66 90                	xchg   %ax,%ax
  100263:	66 90                	xchg   %ax,%ax
  100265:	66 90                	xchg   %ax,%ax
  100267:	66 90                	xchg   %ax,%ax
  100269:	66 90                	xchg   %ax,%ax
  10026b:	66 90                	xchg   %ax,%ax
  10026d:	66 90                	xchg   %ax,%ax
  10026f:	90                   	nop

00100270 <__libc_csu_init>:
  100270:	55                   	push   %ebp
  100271:	57                   	push   %edi
  100272:	31 ff                	xor    %edi,%edi
  100274:	56                   	push   %esi
  100275:	53                   	push   %ebx
  100276:	e8 b5 fd ff ff       	call   100030 <__x86.get_pc_thunk.bx>
  10027b:	81 c3 95 0d 00 00    	add    $0xd95,%ebx
  100281:	83 ec 1c             	sub    $0x1c,%esp
  100284:	8b 6c 24 30          	mov    0x30(%esp),%ebp
  100288:	8d b3 04 f3 ff ff    	lea    -0xcfc(%ebx),%esi
  10028e:	e8 59 00 00 00       	call   1002ec <_init>
  100293:	8d 83 00 f3 ff ff    	lea    -0xd00(%ebx),%eax
  100299:	29 c6                	sub    %eax,%esi
  10029b:	c1 fe 02             	sar    $0x2,%esi
  10029e:	85 f6                	test   %esi,%esi
  1002a0:	74 27                	je     1002c9 <__libc_csu_init+0x59>
  1002a2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
  1002a8:	8b 44 24 38          	mov    0x38(%esp),%eax
  1002ac:	89 2c 24             	mov    %ebp,(%esp)
  1002af:	89 44 24 08          	mov    %eax,0x8(%esp)
  1002b3:	8b 44 24 34          	mov    0x34(%esp),%eax
  1002b7:	89 44 24 04          	mov    %eax,0x4(%esp)
  1002bb:	ff 94 bb 00 f3 ff ff 	call   *-0xd00(%ebx,%edi,4)
  1002c2:	83 c7 01             	add    $0x1,%edi
  1002c5:	39 f7                	cmp    %esi,%edi
  1002c7:	75 df                	jne    1002a8 <__libc_csu_init+0x38>
  1002c9:	83 c4 1c             	add    $0x1c,%esp
  1002cc:	5b                   	pop    %ebx
  1002cd:	5e                   	pop    %esi
  1002ce:	5f                   	pop    %edi
  1002cf:	5d                   	pop    %ebp
  1002d0:	c3                   	ret    
  1002d1:	eb 0d                	jmp    1002e0 <__libc_csu_fini>
  1002d3:	90                   	nop
  1002d4:	90                   	nop
  1002d5:	90                   	nop
  1002d6:	90                   	nop
  1002d7:	90                   	nop
  1002d8:	90                   	nop
  1002d9:	90                   	nop
  1002da:	90                   	nop
  1002db:	90                   	nop
  1002dc:	90                   	nop
  1002dd:	90                   	nop
  1002de:	90                   	nop
  1002df:	90                   	nop

001002e0 <__libc_csu_fini>:
  1002e0:	f3 c3                	repz ret 

001002e2 <_fp_hw>:
  1002e2:	03 00 00 00 66 90                                   ....f.

001002e8 <_IO_stdin_used>:
  1002e8:	01 00 02 00                                         ....

001002ec <_init>:
  1002ec:	53                   	push   %ebx
  1002ed:	83 ec 08             	sub    $0x8,%esp
  1002f0:	e8 3b fd ff ff       	call   100030 <__x86.get_pc_thunk.bx>
  1002f5:	81 c3 1b 0d 00 00    	add    $0xd1b,%ebx
  1002fb:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
  100301:	85 c0                	test   %eax,%eax
  100303:	74 05                	je     10030a <_init+0x1e>
  100305:	e8 36 00 00 00       	call   100340 <__fini_array_end+0x14>
  10030a:	83 c4 08             	add    $0x8,%esp
  10030d:	5b                   	pop    %ebx
  10030e:	c3                   	ret    
  10030f:	90                   	nop

00100310 <__init_array_start>:
  100310:	d0 00                	rolb   (%eax)
  100312:	10 00                	adc    %al,(%eax)

00100314 <_fini>:
  100314:	53                   	push   %ebx
  100315:	83 ec 08             	sub    $0x8,%esp
  100318:	e8 13 fd ff ff       	call   100030 <__x86.get_pc_thunk.bx>
  10031d:	81 c3 f3 0c 00 00    	add    $0xcf3,%ebx
  100323:	83 c4 08             	add    $0x8,%esp
  100326:	5b                   	pop    %ebx
  100327:	c3                   	ret    

00100328 <__fini_array_start>:
  100328:	b0 00                	mov    $0x0,%al
  10032a:	10 00                	adc    %al,(%eax)

Дизассемблирование раздела .plt:

00100330 <.plt>:
  100330:	ff 35 14 10 10 00    	pushl  0x101014
  100336:	ff 25 18 10 10 00    	jmp    *0x101018
  10033c:	00 00                	add    %al,(%eax)
  10033e:	00 00                	add    %al,(%eax)
  100340:	ff 25 1c 10 10 00    	jmp    *0x10101c
  100346:	68 00 00 00 00       	push   $0x0
  10034b:	e9 e0 ff ff ff       	jmp    100330 <__fini_array_end+0x4>
  100350:	ff 25 20 10 10 00    	jmp    *0x101020
  100356:	68 08 00 00 00       	push   $0x8
  10035b:	e9 d0 ff ff ff       	jmp    100330 <__fini_array_end+0x4>
